<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <title><%= title %> / AR</title>
    <script src="https://aframe.io/releases/1.5.0/aframe.min.js"></script>
    <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"></script>
    <script src="https://rawgit.com/donmccurdy/aframe-extras/master/dist/aframe-extras.loaders.min.js"></script>
    <link rel="stylesheet" href="../stylesheets/arScreen.css" />
</head>
<body style="margin: 0px; overflow: hidden">
    <a-scene embedded arjs="sourceType: webcam;">
        <% markersAndModels.forEach(function(marker) { %>
        <a-marker
            id="marker-<%= marker.id %>"
            preset="<%= marker.preset %>"
            type="pattern"
            url="<%= marker.patt %>"
            position="<%= marker.marker_position %>"
            scale="<%= marker.marker_scale %>"
            rotation="<%= marker.marker_rotation %>"
        >
            <a-text
                id="text-<%= marker.id %>"
                value="<%= marker.text_data %>"
                color="<%= marker.text_color %>"
                position="<%= marker.text_position %>"
                rotation="<%= marker.text_rotation %>"
                scale="<%= marker.text_scale %>"
            >
            </a-text>
            <a-entity
                gltf-model="<%= marker.src %>"
                position="<%= marker.model_position %>"
                scale="<%= marker.model_scale %>"
                rotation="<%= marker.model_rotation %>"
                animation-mixer="<%= marker.anim_conf %>"
            >
            </a-entity>
        </a-marker>
        <% }); %>
        <a-entity camera></a-entity>
    </a-scene>

    <!-- Fuente de video -->
    <video id="webcam" autoplay style="display: none"></video>
    <!-- Canvas para captura de screenshots -->
    <canvas id="canvas" width="800" height="600" style="display: none"></canvas>

    <button id="takeScreenshot">
        <img src="../images/icons/photo-camera (2).png" width="75" height="75" />
    </button>
    <progress id="progresoMarker" value="0" max="<%= markersAndModels.length %>"></progress>

    <script>
        const totalMarkers = <%= markersAndModels.length %>;
        let detectedMarkers = new Set();
        if (<%= detectedMarkersSave.length %> !== 0) {
            detectedMarkers = new Set('<%= detectedMarkersSave %>'.split(','));
        }
        let allDetected = detectedMarkers.size === totalMarkers;
        console.log('Marcadores detectados:', detectedMarkers);

        var barra = document.getElementById("progresoMarker");
        barra.value = detectedMarkers.size;

        function playSound(path, loop) {
            let audio = new Audio(path);
            audio.loop = loop;
            audio.play();
        }

        function updateProgress(value) {
            var starPosition = (100 / totalMarkers) * value;
            if (starPosition == 100) starPosition = 99;
            const starIcon = document.createElement('span');
            starIcon.innerHTML = '&#9733;';
            starIcon.style.position = 'absolute';
            starIcon.style.top = '-1px';
            starIcon.style.left = `${starPosition - 1}%`;
            starIcon.style.fontSize = '35px';
            starIcon.style.color = 'gold';
            starIcon.style.zIndex = 202;
            barra.parentNode.appendChild(starIcon);
        }

        <% markersAndModels.forEach(function(marker) { %>
        const marker<%= marker.id %> = document.querySelector('#marker-<%= marker.id %>');
        if (marker<%= marker.id %>) {
            marker<%= marker.id %>.addEventListener('markerFound', async function() {
                console.log('Marker <%= marker.id %> encontrado!');
                playSound('../assets/sounds/mixkit-long-pop-2358.wav', false);
                if (!detectedMarkers.has('<%= marker.id %>')) {
                    detectedMarkers.add('<%= marker.id %>');
                    barra.value = detectedMarkers.size;
                    updateProgress(barra.value);
                    playSound('../assets/sounds/mixkit-bonus-earned-in-video-game-2058.wav', false);
                    if (<%= current_user ? true : false %>) {
                        const userId = '<%= current_user ? current_user.id : null %>'; 
                        await actualizarProgreso(userId, '<%= marker.id %>');
                    } else {
                        console.log("Debes logearte");
                    }
                }
                if (detectedMarkers.size === totalMarkers && !allDetected) {
                    console.log('Todos los marcadores han sido encontrados!');
                    playSound('../assets/sounds/mixkit-small-win-2020.wav', false);
                    allDetected = true;
                }
            });

            marker<%= marker.id %>.addEventListener('markerLost', function() {
                console.log('Marker #<%= marker.id %> perdido!');
                playSound('../assets/sounds/mixkit-dry-pop-up-notification-alert-2356.wav', false);
            });
        } else {
            console.error(`Marcador no encontrado: #marker-<%= marker.id %>`);
        }
        <% }); %>

        async function actualizarProgreso(userId, markerId) {
            if (userId) {
                try {
                    const response = await fetch('/progreso/actualizar-progreso', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userId: userId, markerId: markerId })
                    });
                    const data = await response.json();
                    console.log('Progreso actualizado:', data);
                    if (data.alertaHTML) {
                        const alertContainer = document.createElement('div');
                        alertContainer.innerHTML = data.alertaHTML;
                        document.body.appendChild(alertContainer);
                    }
                } catch (error) {
                    console.error('Error al actualizar el progreso:', error);
                }
            }
        }
    </script>

    <!-- Script de captura de pantalla -->
    <script type="text/javascript" src="../javascripts/screenshoot.js"></script>
</body>
</html>


<style>
  @media (max-width: 600px) {
  a-marker,
  a-text,
  a-entity {
    scale: 0.1 0.1 0.1 !important; /* Ajuste de escala para pantallas peque√±as */
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  a-marker,
  a-text,
  a-entity {
    scale: 0.1 0.1 0.1 !important; /* Ajuste de escala para pantallas medianas */
  }
}

@media (min-width: 1201px) {
  a-marker,
  a-text,
  a-entity {
    scale: 1 1 1 !important; /* Ajuste de escala para pantallas grandes */
  }
}
</style>